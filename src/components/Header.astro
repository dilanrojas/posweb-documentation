---
import ThemeSwitcher from "@components/ThemeSwitcher"
import MobileMenu from "@components/MobileMenu"
import Searchbar from "@components/Searchbar"
import PosWebLogo from "./PosWebLogo.astro"

const { pathname } = Astro.url
const normalizedPathName =
  pathname.length > 1 && pathname.endsWith("/")
    ? pathname.slice(0, -1) : pathname

const pages = [
  { label: "Administrador", href: "/admin/productos", active : normalizedPathName.startsWith("/admin") },
  { label: "Cajero", href: "/cajero/vehiculos", active: normalizedPathName.startsWith("/cajero") }
].map((page) => ({
  ...page,
  active: page.active ?? normalizedPathName === page.href
}))
---

<header class="primary-header">

  <div class="header-wrapper wrapper">

    <div>
      <MobileMenu client:media="(width <= 1080px)" />
      <PosWebLogo />
    </div>

    <div class="searchbar-wrapper">
      <Searchbar client:load />
    </div>

    <div>
      <nav class="primary-nav">
        <ul>
          {pages && pages.map(({ label, href, active }) => (
            <li>
              <a
                class:list={[
                  "header-item",
                  { "header-item-active" : active }
                ]}
                href={href}
              >
              {label}  
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <ThemeSwitcher client:load  />

    </div>
    
  </div>
</header>

<style is:global>
  .primary-header {
		display: flex;
		align-items: center;
    position: fixed;
    width: 100%;
    height: 64px;
    color: var(--text-contrast-1);
    background-color: var(--bg-primary);
    transition: box-shadow .3s ease;
    z-index: 90;
		overflow: hidden;
  }
	
	.header-wrapper {
		--custom-width: 1580px;
		--custom-padding: 1.5rem;
		
		display: flex;
		align-items: center;
		gap: 1.5em;
	}

  .header-wrapper > div {
    display: flex;
    align-items: center;
    gap: 1em;

    &:last-child {
      justify-content: end;
    }
  }

	@media (width <= 1080px) {
		.header-wrapper {
			--custom-padding: 1rem;
		}
	}
	

	@media (width <= 700px) {
		.header-wrapper {
			gap: .8em;
		}

    .header-wrapper > div {
      gap: .8em;
    }
	}

  .primary-header.shadow {
    box-shadow: 0px 2px 10px rgba(0 0 0 / .1);
  }

  .open-icon, .close-icon {
    transform: translateY(2.5px);
  }

  .sm-menu { display: none!important; z-index: 90; }

  @media (width <= 1080px) {
    .sm-menu { display: grid!important }

    .sm-menu[aria-expanded="false"]  {
      & .close-icon { display: none  }
      & .open-icon  { display: block }
    }

    .sm-menu[aria-expanded="true"] {
      & .close-icon { display: block }
      & .open-icon  { display: none  }
    }
  }

  .primary-nav ul {
    display: flex;
    gap: .2em;
  }

	@media (width <= 1080px) {
		.primary-nav {
			display: none;
			align-items: center;
			position: fixed;
			background-color: var(--bg-primary);
			width: 100%;
			height: 64px;
			padding-left: 4.5em;
			left: 0;
		}
		
		.primary-nav.show {
			display: flex;
			opacity: 1;
			transition: opacity .12s ease-in-out;
			
			@starting-style { opacity: 0 }
		}
  }

  @media (width <= 600px) {
    .header-wrapper {
      --custom-padding: .6rem;
    }

    .primary-nav { padding-left: 4em }
  }

  .header-item {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: .7em .9em;
    font-weight: 600;
    transition: color .1s ease-in-out;
  }

  .header-item:hover:not(.header-item-active) {
    color: var(--text)
  }

  .header-item-active {
    color: var(--accent);
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const header = document.querySelector('.primary-header')
    const handleShadow = () => {
      window.scrollY > 0
        ? header.classList.add('shadow')
        : header.classList.remove('shadow')
    }

    window.addEventListener('scroll', handleShadow)
  });
</script>